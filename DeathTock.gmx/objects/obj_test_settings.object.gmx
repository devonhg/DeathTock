<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Create the lightui window
with(lightui_create_window(noone, 60, 500, 630, 'SETTINGS'))
{
    // Create a label
    lightui_create_label(60, 80, 'Sound Effects');
    
    // Create a toggle
    lightui_create_toggle(360, 82, 1, 'test_toggle_1', toggle_demo_callback);

    // Create a label
    lightui_create_label(60, 130, 'Background Music');
    
    // Create a toggle
    lightui_create_toggle(360, 132, 1, 'test_toggle_2', toggle_demo_callback);

    // Create a label
    lightui_create_label(60, 200, 'Checkboxes');
    
    // Create a checkbox
    lightui_create_checkbox(60, 250, 1, 'Item \#1', 'test_checkbox_1', checkbox_demo_callback);

    // Create a checkbox
    lightui_create_checkbox(250, 250, 0, 'Item \#2', 'test_checkbox_2', checkbox_demo_callback);

    // Create a label
    lightui_create_label(60, 320, 'Sliders');

    // Create a slider
    lightui_create_slider(60, 370, 160, 50, 'test_slider_1', slider_demo_callback);
    
    // Create a slider
    lightui_create_slider(250, 370, 180, 10, 'test_slider_2', slider_demo_callback);

    // Create a label
    lightui_create_label(60, 440, 'Radio Buttons');

    // Create a radio button group
    lightui_create_radio(60, 490, 0, 'Low', 'value_low', 'test_radio_1', radio_demo_callback);
    lightui_create_radio(190, 490, 1, 'Med', 'value_med', 'test_radio_1', radio_demo_callback);
    lightui_create_radio(330, 490, 0, 'High', 'value_high', 'test_radio_1', radio_demo_callback);
    
    // Draw icon badges at bottom of window
    lightui_create_icon_button(130, 580, 1, 'test_cancel', icon_button_demo_callback);
    lightui_create_icon_button(290, 580, 0, 'test_save', icon_button_demo_callback);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_setting_info, 0, round(display_get_gui_width() / 2) - 310, 705);
draw_sprite(spr_setting_info2, 0, round(display_get_gui_width() / 2) + 125, 160);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

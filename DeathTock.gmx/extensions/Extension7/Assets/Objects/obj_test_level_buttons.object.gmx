<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Create the lightui window
with(lightui_create_window(noone, 60, 500, 630, 'CHOOSE  A  LEVEL'))
{
    // Create the home button
    lightui_create_icon_button(noone, 585, 27, 'badge_test_splash_navigation', icon_button_demo_callback);

    // Create the panel containers
    with(lightui_create_panel_container())
    {
        // Add a panel to the container
        with(lightui_create_panel())
        {
            level = 0;
            row = 0;
            
            // Create a bunch of badges
            lightui_create_level_button(30,  30 + (row   * 100), 3, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(130, 30 + (row   * 100), 1, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(230, 30 + (row   * 100), 2, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(330, 30 + (row++ * 100), 3, 0, ++level, level, level_button_demo_callback);

            lightui_create_level_button(30,  30 + (row   * 100), 2, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(130, 30 + (row   * 100), 2, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(230, 30 + (row   * 100), 1, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(330, 30 + (row++ * 100), 1, 0, ++level, level, level_button_demo_callback);
            
            lightui_create_level_button(30,  30 + (row   * 100), 3, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(130, 30 + (row   * 100), 3, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(230, 30 + (row   * 100), 1, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(330, 30 + (row++ * 100), 2, 0, ++level, level, level_button_demo_callback);
            
            lightui_create_level_button(30,  30 + (row   * 100), 1, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(130, 30 + (row   * 100), 1, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(230, 30 + (row   * 100), 3, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(330, 30 + (row++ * 100), 3, 0, ++level, level, level_button_demo_callback);
            
            lightui_create_level_button(30,  30 + (row   * 100), 2, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(130, 30 + (row   * 100), 1, 1, ++level, level, level_button_demo_callback);
            lightui_create_level_button(230, 30 + (row   * 100), 1, 1, ++level, level, level_button_demo_callback);
            lightui_create_level_button(330, 30 + (row++ * 100), 2, 1, ++level, level, level_button_demo_callback);
        }

        // Add a panel to the container
        with(lightui_create_panel())
        {
            level = 19;
            row = 0;
            
            // Create a bunch of badges
            lightui_create_level_button(30,  30 + (row   * 100), 2, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(130, 30 + (row   * 100), 2, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(230, 30 + (row   * 100), 1, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(330, 30 + (row++ * 100), 1, 0, ++level, level, level_button_demo_callback);

            lightui_create_level_button(30,  30 + (row   * 100), 3, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(130, 30 + (row   * 100), 1, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(230, 30 + (row   * 100), 2, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(330, 30 + (row++ * 100), 3, 0, ++level, level, level_button_demo_callback);
                        
            lightui_create_level_button(30,  30 + (row   * 100), 3, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(130, 30 + (row   * 100), 3, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(230, 30 + (row   * 100), 1, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(330, 30 + (row++ * 100), 2, 0, ++level, level, level_button_demo_callback);
            
            lightui_create_level_button(30,  30 + (row   * 100), 1, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(130, 30 + (row   * 100), 1, 1, ++level, level, level_button_demo_callback);
            lightui_create_level_button(230, 30 + (row   * 100), 3, 1, ++level, level, level_button_demo_callback);
            lightui_create_level_button(330, 30 + (row++ * 100), 3, 1, ++level, level, level_button_demo_callback);
            
            lightui_create_level_button(30,  30 + (row   * 100), 2, 1, ++level, level, level_button_demo_callback);
            lightui_create_level_button(130, 30 + (row   * 100), 1, 1, ++level, level, level_button_demo_callback);
            lightui_create_level_button(230, 30 + (row   * 100), 1, 1, ++level, level, level_button_demo_callback);
            lightui_create_level_button(330, 30 + (row++ * 100), 2, 1, ++level, level, level_button_demo_callback);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_levels_info, 0, round(display_get_gui_width() / 2) - 280, 695);
draw_sprite(spr_levels_info2, 0, round(display_get_gui_width() / 2) - 360, 150);
draw_sprite(spr_button_more_panel, 0, round(display_get_gui_width() / 2) + 260, 280);



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

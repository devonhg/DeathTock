<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Create the lightui window
with(lightui_create_window(noone, 60, 500, 580, 'SCROLL-O-MATIC'))
{
    // Create a scroll box
    with(lightui_create_scroll_box(10, 70, 440, 440, 110))
    {
        // Create a label
        lightui_create_label(35, 10, 'Sound Effects');
        
        // Create a toggle
        lightui_create_toggle(350, 12, 1, 'test_toggle_1', toggle_demo_callback);

        // Create a label
        lightui_create_label(35, 60, 'Background Music');
        
        // Create a toggle
        lightui_create_toggle(350, 62, 1, 'test_toggle_2', toggle_demo_callback);
    
        // Create a label
        lightui_create_label(35, 120, 'Checkboxes');
        
        // Create a checkbox
        lightui_create_checkbox(35, 170, 1, 'Item \#1', 'test_checkbox_1', checkbox_demo_callback);
    
        // Create a checkbox
        lightui_create_checkbox(250, 170, 0, 'Item \#2', 'test_checkbox_2', checkbox_demo_callback);
    
        // Create a label
        lightui_create_label(35, 230, 'Sliders');
    
        // Create a slider
        lightui_create_slider(35, 280, 160, 50, 'test_slider_1', slider_demo_callback);
        
        // Create a slider
        lightui_create_slider(250, 280, 150, 20, 'test_slider_2', slider_demo_callback);
    
        // Create a label
        lightui_create_label(35, 340, 'Radio Buttons');
    
        // Create a radio button group
        lightui_create_radio(35, 390, 0, 'Low', 'value_low', 'test_radio_1', radio_demo_callback);
        lightui_create_radio(165, 390, 1, 'Med', 'value_med', 'test_radio_1', radio_demo_callback);
        lightui_create_radio(305, 390, 0, 'High', 'value_high', 'test_radio_1', radio_demo_callback);                         
                                                
        // Grid control
        level = 0;
        row = 0;
        offset = 440;
        
        // Create 5 rows of level buttons
        for(var i = 0; i &lt; 5; i++)
        {
            lightui_create_level_button(30,  offset + (row   * 110), 3, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(130, offset + (row   * 110), 1, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(230, offset + (row   * 110), 2, 0, ++level, level, level_button_demo_callback);
            lightui_create_level_button(330, offset + (row++ * 110), 3, 0, ++level, level, level_button_demo_callback);
        }
    }
    
    // Draw icon buttons at bottom of window
    lightui_create_icon_button(60, 530, 27, 'test_menu', icon_button_demo_callback);
    lightui_create_icon_button(160, 530, 18, 'test_menu', icon_button_demo_callback);
    lightui_create_icon_button(260, 530, 22, 'test_menu', icon_button_demo_callback);
    lightui_create_icon_button(360, 530, 21, 'test_save', icon_button_demo_callback);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_info_scroll_box, 0, round(display_get_gui_width() / 2), 182);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Only allow one lightui window object
with(obj_lightui_window)
{
    if (id != other.id)
    {
        instance_destroy();
    }
}

// Set window defaults
_x = 0;
_y = 0;
_w = 200;
_h = 200;
_t = '';
_o = 1;

_color = make_colour_rgb(255, 255, 255);
_font = fnt_lightui_window_caption;

_shadow_alpha = 0.45;
_color_shadow = make_colour_rgb(120, 18, 21);

_children = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(_x == noone)
{
    _x = (display_get_gui_width() - _w)/2;
}


draw_set_color(c_white);

if(_o)
{
    lightui_draw_window_panel(spr_lightui_window, 0, 60, _x, _y, _w, _h);
}
    
if(_t != '')
{
    draw_set_font(_font);

    text_width = string_width(_t);
    text_height = string_height(_t);

    caption_width = string_width(_t) + 200;
    caption_x = _x + ((_w - caption_width) / 2);
    caption_y = _y - 30;

    lightui_draw_sprite_repeat_x(spr_lightui_window_caption, 0, caption_x, caption_y, caption_width, 100);

    draw_set_alpha(_shadow_alpha);
    draw_set_colour(_color_shadow);
    draw_text(caption_x + ((caption_width - text_width)/2), caption_y + ((sprite_get_height(spr_lightui_window_caption) - text_height)/2) + 2, _t);
    
    draw_set_alpha(1);
    draw_set_colour(_color);    
    draw_text(caption_x + ((caption_width - text_width)/2), caption_y + ((sprite_get_height(spr_lightui_window_caption) - text_height)/2), _t);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
